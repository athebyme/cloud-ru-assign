version: '3.8'

services:
  e2e-tests:
    build:
      context: .
      dockerfile: Dockerfile.e2e
    depends_on:
      loadbalancer:
        condition: service_healthy
      backend1:
        condition: service_started
      backend2:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lb-network
    volumes:
      - ./tests:/tests
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TEST_TARGET=http://loadbalancer:8080
    command: ["go", "test", "-v", "-race", "./tests/e2e"]

  loadbalancer:
    build: .
    ports:
      - "8080:8080"
    environment:
      LOG_LEVEL: info
      POSTGRES_HOST: postgres
      POSTGRES_DB: ratelimit
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      REDIS_ADDR: redis:6379
      STORAGE_TYPE: hybrid  # или memory
    volumes:
      - ./configs:/app/configs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - lb-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ratelimit
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lb-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lb-network

  backend1:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./nginx1.conf:/etc/nginx/conf.d/default.conf
    networks:
      - lb-network

  backend2:
    image: nginx:alpine
    ports:
      - "8082:80"
    volumes:
      - ./nginx2.conf:/etc/nginx/conf.d/default.conf
    networks:
      - lb-network

  slow-backend:
    image: nginx:alpine
    ports:
      - "8083:80"
    volumes:
      - ./slow-nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - lb-network

volumes:
  postgres_data:

networks:
  lb-network:
    driver: bridge